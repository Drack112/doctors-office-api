version: "3"

services:
  api:
    container_name: doctors-office-api-container-production
    image: yansoares/doctor-api:production
    build:
      target: prod
      context: .
      dockerfile: Dockerfile.prod
    environment:
      JWT_SECRET: ${JWT_SECRET} # default -> some-secret
      JWT_SECRET_REFRESH_TOKEN: ${JWT_SECRET_REFRESH_TOKEN} # default -> some-token
      JWT_SECRET_EXPIRES_IN: ${JWT_SECRET_EXPIRES_IN} # default -> 7d
      JWT_SECRET_REFRESH_TOKEN_EXPIRES_IN: ${JWT_SECRET_REFRESH_TOKEN_EXPIRES_IN} # default -> 7d
      MYSQL_USER: ${DB_USER} # default -> test
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD} # default -> root123
      MYSQL_DATABASE: ${DB_NAME} # default -> doctors-office-db
      env_file:
        - .env
      depends_on:
        - mysql
      ports:
        - 3000:3000
      networks:
      - doctors-office-api-network

  mysql:
    container_name: doctors-office-db-container-production
    # uncomment `platform` line to run on macOS M1
    #platform: linux/x86_64
    image: mysql:8.0-debian
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    env_file:
     - .env
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - doctors-office-api-network

volumes:
  mysql_data:
    driver: local

networks:
  doctors-office-api-network:
    driver: bridge
